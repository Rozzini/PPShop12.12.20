// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PProjectShop;

namespace PProjectShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201213093939_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PProjectShop.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("text")
                        .HasColumnName("category_description");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("pk_categories");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("PProjectShop.Models.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<string>("ClientName")
                        .HasColumnType("text")
                        .HasColumnName("client_name");

                    b.HasKey("ClientId")
                        .HasName("pk_clients");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("PProjectShop.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("OrderId")
                        .HasName("pk_orders");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("PProjectShop.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<Guid?>("CategoryId1")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id1");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text")
                        .HasColumnName("product_description");

                    b.Property<string>("ProductImage")
                        .HasColumnType("text")
                        .HasColumnName("product_image");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("product_price");

                    b.HasKey("ProductId")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.HasIndex("CategoryId1")
                        .HasDatabaseName("ix_products_category_id1");

                    b.ToTable("products");
                });

            modelBuilder.Entity("PProjectShop.Models.Order", b =>
                {
                    b.OwnsOne("PProjectShop.Models.BillingAddress", "BillingAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid")
                                .HasColumnName("order_id");

                            b1.Property<string>("AddressLine")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_address_line");

                            b1.Property<string>("City")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_city");

                            b1.Property<string>("Country")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_country");

                            b1.Property<string>("FirstName")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_first_name");

                            b1.Property<string>("LastName")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_last_name");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_phone_number");

                            b1.Property<string>("State")
                                .HasColumnType("text")
                                .HasColumnName("billing_address_state");

                            b1.Property<int>("Zip")
                                .HasColumnType("integer")
                                .HasColumnName("billing_address_zip");

                            b1.HasKey("OrderId")
                                .HasName("pk_orders");

                            b1.ToTable("orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId")
                                .HasConstraintName("fk_billing_address_orders_order_id");
                        });

                    b.Navigation("BillingAddress");
                });

            modelBuilder.Entity("PProjectShop.Models.Product", b =>
                {
                    b.HasOne("PProjectShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_products_categories_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PProjectShop.Models.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId1")
                        .HasConstraintName("fk_products_categories_category_id1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PProjectShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
